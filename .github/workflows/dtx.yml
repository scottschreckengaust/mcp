---
name: Desktop Extension (DXT)
run-name: ${{ github.workflow}} by @${{ github.triggering_actor }} for @${{ github.actor }}

concurrency:
  cancel-in-progress: true
  group: ${{ github.event_name}}-${{ github.ref}}

on:
  push:
  workflow_dispatch:
    inputs:
      ecosystem:
        description: 'Supported ecosystems'
        default: 'python'
        required: false
        type: choice
        options:
          - 'python'

permissions:
    actions: none
    attestations: none
    checks: none
    contents: none
    deployments: none
    discussions: none
    id-token: none
    issues: none
    models: none
    packages: none
    pages: none
    pull-requests: none
    repository-projects: none
    security-events: none
    statuses: none

jobs:
  package:
    concurrency:
      cancel-in-progress: true
      group: ${{ github.workflow}}-${{ matrix.runs-on }}-${{ github.ref }}
    continue-on-error: true
    if: true || always() || cancelled() || failure() || success() # github, inputs, vars, needs
    name: DXT ${{ matrix.package }} ${{ matrix.runs-on }}
    needs: []
    # outputs:
    #   artifact-identifier: ${{ steps.upload.outputs.artifact-identifier }}

    permissions: 
      actions: none
      attestations: none
      checks: none
      contents: none
      deployments: none
      discussions: none
      id-token: none
      issues: none
      models: none
      packages: none
      pages: none
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 1
      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          working-directory: src/${{ matrix.package }}
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: "src/${{ matrix.package }}/.python-version"
      - name: Install dependencies
        working-directory: src/${{ matrix.package }}
        run: |
          uv venv --clear --relocatable --link-mode "copy" server/venv
      - name: Activate (Windows)
        if: matrix.runs-on == 'windows-latest'
        working-directory: src/${{ matrix.package }}
        run: |
          server/venv/Scripts/Activate.ps1
        shell: powershell
      - name: Activate (non-Windows)
        if: ${{ ! (matrix.runs-on == 'windows-latest') }}
        working-directory: src/${{ matrix.package }}
        run: |
          source server/venv/bin/activate
      - name: Install
        working-directory: src/${{ matrix.package }}
        run: |
          uv sync --frozen --active
      - name: Create NPM Package Lock
        id: create-package-lock
        run: |
          cat <<EOT > package-lock.json
          {
            "name": "automated-dxt",
            "version": "0.0.0",
            "lockfileVersion": 3,
            "packages": {}
          }
          EOT
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22.14.0"
          cache: npm
      - name: Manifest Windows
        if: matrix.runs-on == 'windows-latest'
        working-directory: src/${{ matrix.package }}
        run: |
          mv manifest-windows.json manifest.json
      - name: DXT
        working-directory: src/${{ matrix.package }}
        run: |
          cp -r awslabs server/
          npx @anthropic-ai/dxt@0.2.6 --version
          npx @anthropic-ai/dxt@0.2.6 validate manifest.json
          npx @anthropic-ai/dxt@0.2.6 pack
      - name: Upload DXT
        id: upload
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dxt-${{ matrix.package }}-${{ matrix.runs-on }}
          path: src/${{ matrix.package }}/${{ matrix.package }}.dxt
          retention-days: 1
          if-no-files-found: warn
    strategy:
      fail-fast: false
      matrix:
        runs-on: 
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        package:
          - redshift-mcp-server
      max-parallel: 3
    timeout-minutes: 15
