---
# Creates a tag on `main` when a PR is merged from a `release/**`
name: Release v2 Merge (review)
description: |
  This workflow creates a tag on the `main` branch when a pull request is merged from a `release/**` branch.
  It is triggered by the `pull_request` event with the `closed` type, specifically when the PR is merged.
  The tag will be signed using GPG and pushed to the repository.
  This workflow is intended for a protected environement for approval or rejection.
on:
  pull_request:
    types:
      - closed
    branches:
      - main
env:
  GITHUB_USER_EMAIL: vars.GITHUB_USER_EMAIL || '203918161+awslabs-mcp@users.noreply.github.com'
  GITHUB_USER_NAME: vars.GITHUB_USER_NAME || 'awslabs-mcp'
permissions:
  actions: none
  attestations: none
  checks: none
  contents: none
  deployments: none
  discussions: none
  id-token: none
  issues: none
  models: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none
jobs:
  tag_on_release_merge:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment:
      name: release
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
      - name: configure git
        continue-on-error: true
        run: |
          git config --local user.email "${{ env.GITHUB_USER_EMAIL }}"
          git config --local user.name "${{ env.GITHUB_USER_NAME }}"
          gpg --no-tty --batch --passphrase '${{ secrets.GPG_PASSPHRASE }}' --pinentry-mode loopback --allow-secret-key-import --import <(echo "${{ secrets.GPG_PRIVATE_KEY }}");
          gpg --import-ownertrust <(echo "${{ secrets.GPG_KEY_ID }}:6:")
          git config --global user.signingkey "${{ secrets.GPG_KEY_ID }}"
          git config --global commit.gpgsign true
          git config --global tag.gpgsign true
          touch "${{ runner.temp}}/$$.txt"
          gpg --no-tty --batch --yes --passphrase '${{ secrets.GPG_PASSPHRASE }}' --pinentry-mode loopback --local-user "${{ env.GITHUB_USER_EMAIL }}" --sign "${{ runner.temp }}/$$.txt"
      - name: Create Tag
        id: create-tag
        run: |
          TAG=$(echo "${{ github.event.pull_request.head.ref }}" | cut -d'/' -f2)
          if [ -z "$TAG" ]; then echo "Release cannot be empty"; exit 1; fi;
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
